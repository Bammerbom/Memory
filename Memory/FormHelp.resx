<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>